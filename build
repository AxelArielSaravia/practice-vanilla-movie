#!/bin/bash

#This Build use:
# Bun.js to bundle and minify javascript (https://bun.sh/)
# tdewolff/minify to minify html, css and json (https://github.com/tdewolff/minify)

dir=./public

media=0
api=0

if [ "$1" = "media" ]; then
    media=1
elif [ "$1" = "api" ]; then
    api=1
fi
if [ "$2" = "media" ]; then
    media=1
elif [ "$2" = "api" ]; then
    api=1
fi

if [ ! -d $dir ]; then
    mkdir $dir
    echo Create $dir
fi
if [ ! -d "$dir/movie" ]; then
    mkdir "$dir/movie"
    echo Create "$dir/movie"
fi
if [ ! -d "$dir/tv" ]; then
    mkdir "$dir/tv"
    echo Create "$dir/tv"
fi
if [ ! -d "$dir/discover" ]; then
    mkdir "$dir/discover"
    echo Create "$dir/discover"
fi
if [ ! -d "$dir/popular" ]; then
    mkdir "$dir/popular"
    echo Create "$dir/popular"
fi
if [ ! -d "$dir/top_rated" ]; then
    mkdir "$dir/top_rated"
    echo Create "$dir/top_rated"
fi
if [ ! -d "$dir/trending" ]; then
    mkdir "$dir/trending"
    echo Create "$dir/trending"
fi

#Home
bun build ./src/main.js --outdir $dir --minify --external '*'
echo JS Build main.js Successful

bun build ./src/general.js --outdir $dir --minify --external '*'
echo JS Build general.js Successful

minify -o $dir/index.html ./src/index.html --html-keep-end-tags
echo index.html minified success

minify -o $dir/general.css ./src/general.css
echo general.css minified success

minify -o $dir/collection.css ./src/collection.css
echo collection.css minified success

minify -o $dir/hero.css ./src/hero.css
echo hero.css minified success

minify -o $dir/modal.css ./src/modal.css
echo modal.css minified success

minify -o $dir/modal-tv.css ./src/modal-tv.css
echo modal-tv.css minified success


#Tv
bun build ./src/tv/main.js --outdir $dir/tv --minify --external '*'
echo JS Build /tv/main.js Successful

minify -o $dir/tv/index.html ./src/tv/index.html --html-keep-end-tags
echo /tv/index.html minified success


#Movie
bun build ./src/movie/main.js --outdir $dir/movie --minify --external '*'
echo JS Build /movie/main.js Successful

minify -o $dir/movie/index.html ./src/movie/index.html --html-keep-end-tags
echo /movie/index.html minified success


#Discover
bun build ./src/discover/main.js --outdir $dir/discover --minify --external '*'
echo JS Build /discover/main.js Successful

minify -o $dir/discover/index.html ./src/discover/index.html --html-keep-end-tags
echo /discover/index.html minified success


#Popular
bun build ./src/popular/main.js --outdir $dir/popular --minify --external '*'
echo JS Build /popular/main.js Successful

minify -o $dir/popular/index.html ./src/popular/index.html --html-keep-end-tags
echo /popular/index.html minified success


#Top Rated
bun build ./src/top_rated/main.js --outdir $dir/top_rated --minify --external '*'
echo JS Build /top_rated/main.js Successful

minify -o $dir/top_rated/index.html ./src/top_rated/index.html --html-keep-end-tags
echo /top_rated/index.html minified success


#Trending
bun build ./src/trending/main.js --outdir $dir/trending --minify --external '*'
echo JS Build /trending/main.js Successful

minify -o $dir/trending/index.html ./src/trending/index.html --html-keep-end-tags
echo /trending/index.html minified success



if [ $media = 1 ]; then
    cp -dr ./src/media $dir/media
    echo Copy media
fi


if [ $api = 1 ]; then
    api_dir="$dir/api"
    if [ ! -d "$api_dir" ]; then
        mkdir $api_dir
        echo Create $api_dir
    fi
    minify -o $api_dir/credits.js  ./api/credits.js
    minify -o $api_dir/discover.js  ./api/discover.js
    minify -o $api_dir/genres.js    ./api/genres.js
    minify -o $api_dir/images.js    ./api/images.js
    minify -o $api_dir/movie.js     ./api/movie.js
    minify -o $api_dir/popular.js   ./api/popular.js
    minify -o $api_dir/toprated.js  ./api/toprated.js
    minify -o $api_dir/trending.js  ./api/trending.js
    minify -o $api_dir/tv.js        ./api/tv.js
    minify -o $api_dir/_utils.js    ./api/_utils.js
    echo API minified success
fi
